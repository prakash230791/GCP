resources:
- name: gcp-vm02
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          echo "Startup script started at $(date)"
          # Create a user and generate a password
          USERNAME="gemini-user"
          PASSWORD=$(openssl rand -base64 12)
          useradd -m -s /bin/bash $USERNAME
          echo "$USERNAME:$PASSWORD" | chpasswd

          # The Secret Manager API should be enabled by the workflow, but enabling here as a fallback.
          gcloud services enable secretmanager.googleapis.com --project=$(gcloud config get-value project)

          # --- Store Username ---
          # Check if the secret exists, and create it if it doesn't.
          gcloud secrets describe vm-username --project=$(gcloud config get-value project) >/dev/null 2>&1 || \
            gcloud secrets create vm-username --replication-policy=automatic --project=$(gcloud config get-value project)
          # Add the username as a new version to the secret.
          echo -n "$USERNAME" | gcloud secrets versions add vm-username --data-file=- --project=$(gcloud config get-value project)

          # --- Store Password ---
          # Check if the secret exists, and create it if it doesn't.
          gcloud secrets describe vm-password --project=$(gcloud config get-value project) >/dev/null 2>&1 || \
            gcloud secrets create vm-password --replication-policy=automatic --project=$(gcloud config get-value project)
          # Add the password as a new version to the secret.
          echo -n "$PASSWORD" | gcloud secrets versions add vm-password --data-file=- --project=$(gcloud config get-value project)
      - key: ssh-keys
        value: "gemini-user:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDVkz8Ql52amO1UP18iPVz9S4yfmFTOuamSlyA6cJSUJqEXb2whjUi38RsRiVcZrOH/wLXyIpTCRFPX873laRacSsRB9awVYOOEb0vGT/VtHru3QnzwUukwe60w7g+BvbpwpYl7VqjeUl9sPUpPc/no/o5e22id1mtrS9aTrij5cSGVMXBRQvkNKTBU2U9GYpYt7h7raPAAKt34DzTGyt8hGozpa7JgVt9RCeQA51FlX6pePMHGDyw6azrqMNTahMMwjR6WQj3hbgYKbvWFg1d+Zd9u1Chw7TCErkRPkK5oef+PH83eD9lvQzuo58kwlzPL8AMmUJWBl7FC17v2zkRqrpFx3iD29qx+TyCxowYW0unqt5rfewU5ojobD6z2vFPaA++24XFtee2ftzZzAjvusyWXMH+m6/dbMqa/YtZY56b9kPBcDYZ82837mrqBkkehDTmap8mVimc3uGEE2lb+vjilUN3wydEwTEPxl4KKA2A1q2I5mTG1njPLpIBW+8M= praka@PrakashDellPC"
      - key: timestamp
        value: "{{ properties.timestamp }}"
    serviceAccounts:
    - email: default
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
- name: allow-http-https
  type: compute.v1.firewall
  properties:
    network: global/networks/default
    allowed:
    - IPProtocol: tcp
      ports:
      - 80
      - 443
    sourceRanges:
    - 0.0.0.0/0
- name: allow-port-5000
  type: compute.v1.firewall
  properties:
    network: global/networks/default
    allowed:
    - IPProtocol: tcp
      ports:
      - 5000
    sourceRanges:
    - 0.0.0.0/0
